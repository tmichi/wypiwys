// $m3 = $m1 * $m2
global proc float[] mat_mul(float $m1[], float $m2[])
{
	float $m3[9];
	$m3[0] = $m1[0] * $m2[0] + $m1[1] * $m2[3] + $m1[2] * $m2[6] ;
	$m3[1] = $m1[0] * $m2[1] + $m1[1] * $m2[4] + $m1[2] * $m2[7] ;
	$m3[2] = $m1[0] * $m2[2] + $m1[1] * $m2[5] + $m1[2] * $m2[8] ;
	$m3[3] = $m1[3] * $m2[0] + $m1[4] * $m2[3] + $m1[5] * $m2[6] ;
	$m3[4] = $m1[3] * $m2[1] + $m1[4] * $m2[4] + $m1[5] * $m2[7] ;
	$m3[5] = $m1[3] * $m2[2] + $m1[4] * $m2[5] + $m1[5] * $m2[8] ;
	$m3[6] = $m1[6] * $m2[0] + $m1[7] * $m2[3] + $m1[8] * $m2[6] ;
	$m3[7] = $m1[6] * $m2[1] + $m1[7] * $m2[4] + $m1[8] * $m2[7] ;
	$m3[8] = $m1[6] * $m2[2] + $m1[7] * $m2[5] + $m1[8] * $m2[8] ;
	return $m3;
}